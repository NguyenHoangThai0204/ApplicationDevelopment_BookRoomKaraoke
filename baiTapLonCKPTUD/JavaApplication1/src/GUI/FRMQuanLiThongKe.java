// * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
// * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
// */
//package GUI;
//
//import java.awt.Color;
//import java.awt.Cursor;
//import java.awt.Dimension;
//import java.awt.Font;
//import java.awt.Panel;
//import java.sql.Date;
//import java.time.LocalDate;
//
//import javax.swing.Icon;
//import javax.swing.ImageIcon;
//import javax.swing.JPanel;
//
//import com.toedter.calendar.JDateChooser;
//
///**
// *
// * @author Asus
// */
//public class FRMQuanLiThongKe extends javax.swing.JFrame {
//
//	/**
//	 * Creates new form FRMQuanLiThongKe
//	 */
//	public FRMQuanLiThongKe() {
//		initComponents();
//	}
//
//	public JPanel getFRMThongKe() {
//		return jPanel1;
//	}
//
//	/**
//	 * This method is called from within the constructor to initialize the form.
//	 * WARNING: Do NOT modify this code. The content of this method is always
//	 * regenerated by the Form Editor.
//	 */
//	@SuppressWarnings("unchecked")
//	// <editor-fold defaultstate="collapsed" desc="Generated
//	// Code">//GEN-BEGIN:initComponents
//	private void initComponents() {
//
//		jPanel1 = new javax.swing.JPanel();
//		jLabel1 = new javax.swing.JLabel();
//		jbThongKe = new javax.swing.JButton();
//		jbLamMoiTK = new javax.swing.JButton();
//		jScrollPane1 = new javax.swing.JScrollPane();
//		jTextArea1 = new javax.swing.JTextArea();
//		jScrollPane2 = new javax.swing.JScrollPane();
//		jTextArea2 = new javax.swing.JTextArea();
//		jLabel2 = new javax.swing.JLabel();
//		jScrollPane3 = new javax.swing.JScrollPane();
//		jTextArea3 = new javax.swing.JTextArea();
//
//		
//		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
//		setPreferredSize(new java.awt.Dimension(1202, 422));
//
//		jPanel1.setPreferredSize(new java.awt.Dimension(1202, 422));
//
//		jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
//		jLabel1.setText("Đến ngày:");
//
//		jbThongKe.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
//		jbThongKe.setIcon(new javax.swing.ImageIcon("D:\\PhatTrienUngDung\\baiTapLonCKPTUD\\baiTapLonCKPTUD\\iCon\\analytics.png")); // NOI18N
//		jbThongKe.setText("Thống kê");
//
//		jbLamMoiTK.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
//		jbLamMoiTK.setIcon(new javax.swing.ImageIcon("D:\\PhatTrienUngDung\\baiTapLonCKPTUD\\baiTapLonCKPTUD\\iCon\\refresh.png")); // NOI18N
//		jbLamMoiTK.setText("Làm mới");
//
//		jTextArea1.setColumns(20);
//		jTextArea1.setRows(5);
//		jScrollPane1.setViewportView(jTextArea1);
//
//		jTextArea2.setColumns(20);
//		jTextArea2.setRows(5);
//		jScrollPane2.setViewportView(jTextArea2);
//		
//		now = LocalDate.now();
//		ngay = now.getDayOfMonth();
//		thang = now.getMonthValue()-1;
//		nam = now.getYear()-1900;
//		
//		dNow = new Date(nam,thang,ngay);
//		
//		dateChooserThongKeNgayBatDau = new JDateChooser();
//		dateChooserThongKeNgayBatDau.setDateFormatString("dd/MM/yyyy");
//
//		dateChooserThongKeNgayBatDau.setFont(new Font("SansSerif", Font.PLAIN, 15));
//		dateChooserThongKeNgayBatDau.getCalendarButton().setPreferredSize(new Dimension(30, 24));
//		dateChooserThongKeNgayBatDau.getCalendarButton().setBackground(new Color(102, 0, 153));
//
//		dateChooserThongKeNgayBatDau.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
//		dateChooserThongKeNgayBatDau.setBounds(130, 15, 180, 38);
//		dateChooserThongKeNgayBatDau.setDate(dNow);
//
//		
//		
//		dateChooserThongKeNgayKetThuc = new JDateChooser();
//		dateChooserThongKeNgayKetThuc.getCalendarButton().setPreferredSize(new Dimension(30, 24));
//
//		dateChooserThongKeNgayKetThuc.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
//		dateChooserThongKeNgayKetThuc.getCalendarButton().setBackground(new Color(102, 0, 153));
//		dateChooserThongKeNgayKetThuc.setFont(new Font("SansSerif", Font.PLAIN, 15));
//		dateChooserThongKeNgayKetThuc.setDateFormatString("dd/MM/yyyy");
//		dateChooserThongKeNgayKetThuc.setBounds(130, 60, 180, 38);
//		dateChooserThongKeNgayKetThuc.setDate(dNow);
//		
//		
//		jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
//		jLabel2.setText("Từ ngày:");
//
//		jTextArea3.setColumns(20);
//		jTextArea3.setRows(5);
//		jScrollPane3.setViewportView(jTextArea3);
//
//		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
//		jPanel1.setLayout(jPanel1Layout);
//		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
//						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
//								.addComponent(jScrollPane3)
//								.addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout
//										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//										.addGroup(jPanel1Layout.createSequentialGroup().addGap(21, 21, 21)
//												.addGroup(jPanel1Layout
//														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//														.addGroup(jPanel1Layout.createSequentialGroup()
//																.addComponent(jLabel2)
//																.addPreferredGap(
//																		javax.swing.LayoutStyle.ComponentPlacement.RELATED,
//																		javax.swing.GroupLayout.DEFAULT_SIZE,
//																		Short.MAX_VALUE)
//																.addComponent(dateChooserThongKeNgayBatDau,
//																		javax.swing.GroupLayout.PREFERRED_SIZE, 159,
//																		javax.swing.GroupLayout.PREFERRED_SIZE))
//														.addGroup(jPanel1Layout.createSequentialGroup()
//																.addComponent(jLabel1)
//																.addPreferredGap(
//																		javax.swing.LayoutStyle.ComponentPlacement.RELATED,
//																		61, Short.MAX_VALUE)
//																.addComponent(dateChooserThongKeNgayKetThuc,
//																		javax.swing.GroupLayout.PREFERRED_SIZE, 159,
//																		javax.swing.GroupLayout.PREFERRED_SIZE))))
//										.addGroup(jPanel1Layout.createSequentialGroup().addGap(12, 12, 12)
//												.addGroup(jPanel1Layout
//														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//														.addComponent(jbThongKe,
//																javax.swing.GroupLayout.Alignment.TRAILING,
//																javax.swing.GroupLayout.DEFAULT_SIZE,
//																javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//														.addComponent(jbLamMoiTK, javax.swing.GroupLayout.DEFAULT_SIZE,
//																javax.swing.GroupLayout.DEFAULT_SIZE,
//																Short.MAX_VALUE))))
//										.addGap(18, 18, 18)
//										.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 431,
//												javax.swing.GroupLayout.PREFERRED_SIZE)
//										.addGap(18, 18, 18).addComponent(jScrollPane2,
//												javax.swing.GroupLayout.PREFERRED_SIZE, 431,
//												javax.swing.GroupLayout.PREFERRED_SIZE)))
//						.addGap(18, 18, 18)));
//		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//				.addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout
//						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//						.addGroup(jPanel1Layout.createSequentialGroup()
//								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//										.addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31,
//												javax.swing.GroupLayout.PREFERRED_SIZE)
//										.addComponent(dateChooserThongKeNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, 31,
//												javax.swing.GroupLayout.PREFERRED_SIZE))
//								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//										.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31,
//												javax.swing.GroupLayout.PREFERRED_SIZE)
//										.addComponent(dateChooserThongKeNgayKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, 31,
//												javax.swing.GroupLayout.PREFERRED_SIZE))
//								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
//										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//								.addComponent(jbThongKe)
//								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//								.addComponent(jbLamMoiTK))
//						.addComponent(jScrollPane1).addComponent(jScrollPane2))
//						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//						.addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
//						.addContainerGap()));
//
//		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
//		getContentPane().setLayout(layout);
//		layout.setHorizontalGroup(
//				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//						.addGroup(layout.createSequentialGroup().addComponent(jPanel1,
//								javax.swing.GroupLayout.PREFERRED_SIZE, 1219, javax.swing.GroupLayout.PREFERRED_SIZE)
//								.addGap(0, 0, Short.MAX_VALUE)));
//		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
//				jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
//				javax.swing.GroupLayout.PREFERRED_SIZE));
//
//		pack();
//	}// </editor-fold>//GEN-END:initComponents
//
//	/**
//	 * @param args the command line arguments
//	 */
//	public static void main(String args[]) {
//		/* Set the Nimbus look and feel */
//		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
//		// (optional) ">
//		/*
//		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
//		 * look and feel. For details see
//		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//		 */
//		try {
//			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//				if ("Nimbus".equals(info.getName())) {
//					javax.swing.UIManager.setLookAndFeel(info.getClassName());
//					break;
//				}
//			}
//		} catch (ClassNotFoundException ex) {
//			java.util.logging.Logger.getLogger(FRMQuanLiThongKe.class.getName()).log(java.util.logging.Level.SEVERE,
//					null, ex);
//		} catch (InstantiationException ex) {
//			java.util.logging.Logger.getLogger(FRMQuanLiThongKe.class.getName()).log(java.util.logging.Level.SEVERE,
//					null, ex);
//		} catch (IllegalAccessException ex) {
//			java.util.logging.Logger.getLogger(FRMQuanLiThongKe.class.getName()).log(java.util.logging.Level.SEVERE,
//					null, ex);
//		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
//			java.util.logging.Logger.getLogger(FRMQuanLiThongKe.class.getName()).log(java.util.logging.Level.SEVERE,
//					null, ex);
//		}
//		// </editor-fold>
//
//		/* Create and display the form */
//		java.awt.EventQueue.invokeLater(new Runnable() {
//			public void run() {
//				new FRMQuanLiThongKe().setVisible(true);
//			}
//		});
//	}
//
//	// Variables declaration - do not modify//GEN-BEGIN:variables
//	private javax.swing.JLabel jLabel1;
//	private javax.swing.JLabel jLabel2;
//	private javax.swing.JPanel jPanel1;
//	private javax.swing.JScrollPane jScrollPane1;
//	private javax.swing.JScrollPane jScrollPane2;
//	private javax.swing.JScrollPane jScrollPane3;
//	private javax.swing.JTextArea jTextArea1;
//	private javax.swing.JTextArea jTextArea2;
//	private javax.swing.JTextArea jTextArea3;
//	private javax.swing.JButton jbLamMoiTK;
//	private javax.swing.JButton jbThongKe;
//	private LocalDate now;
//	private int ngay;
//	private int thang;
//	private int nam;
//	private Date dNow;
//	private JDateChooser dateChooserThongKeNgayBatDau;
//	private JDateChooser dateChooserThongKeNgayKetThuc;
//	// End of variables declaration//GEN-END:variables
//}
// * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
// * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
// */
package GUI;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.awt.Panel;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.rmi.RemoteException;
import java.sql.Date;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;

import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryLabelPositions;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;

import com.toedter.calendar.JDateChooser;

import Connect.ConnectDB;
import Dao.DAOCTHD;
import Dao.DAOHoaDon;
import Dao.DAOMatHang;
import Dao.DAOPhong;
import Entity.ChiTietHD;
import Entity.HoaDon;
import Entity.MatHang;
import Entity.Phong;

/**
 *
 * @author Asus
 */
public class FRMQuanLiThongKe extends javax.swing.JFrame implements ActionListener{

	/**
	 * Creates new form FRMQuanLiThongKe
	 */
	public FRMQuanLiThongKe() {
		initComponents();
	}

	public JPanel getFRMThongKe() {
		return jPanel1;
	}


	
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
		//connect database
		try {
			ConnectDB.getinstance().connect();
		} catch (SQLException e) {
			e.printStackTrace();
		}

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jbThongKe = new javax.swing.JButton();
        jbLamMoiTK = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jPanelTDT = new javax.swing.JPanel();
        iconTDT = new javax.swing.JLabel();
        jLabelTDT = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jPanelThoiGian = new javax.swing.JPanel();
        iconTG = new javax.swing.JLabel();
        jLabelTG = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        btnTongDoanhThu = new javax.swing.JButton();
        btnTGHD = new javax.swing.JButton();
        
		now = LocalDate.now();
		ngay = now.getDayOfMonth();
		thang = now.getMonthValue()-1;
		nam = now.getYear()-1900;
		
		dNow = new Date(nam,thang,ngay);
        
		chooserTuNgay = new JDateChooser();
		chooserTuNgay.getCalendarButton().setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		chooserTuNgay.setBounds(110, 213, 191, 25);
		chooserTuNgay.setDateFormatString("dd/MM/yyyy");
		chooserTuNgay.setDate(dNgayHienTai);
		chooserTuNgay.setBorder(new LineBorder(new Color(114, 23, 153), 1, true));
		chooserTuNgay.setFont(new Font("SansSerif", Font.PLAIN, 15));
		chooserTuNgay.getCalendarButton().setPreferredSize(new Dimension(30, 24));
		chooserTuNgay.getCalendarButton().setBackground(new Color(102, 0, 153));
		chooserTuNgay.getCalendarButton().setToolTipText("Chọn ngày bắt đầu");
        
		chooserDenNgay = new JDateChooser();
		chooserDenNgay.getCalendarButton().setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		chooserDenNgay.setBounds(110, 213, 191, 25);
		chooserDenNgay.setDateFormatString("dd/MM/yyyy");
		chooserDenNgay.setDate(dNgayHienTai);
		chooserDenNgay.setBorder(new LineBorder(new Color(114, 23, 153),1,true));
		chooserDenNgay.setFont(new Font("SansSerif", Font.PLAIN, 15));
		chooserDenNgay.getCalendarButton().setPreferredSize(new Dimension(30, 24));
		chooserDenNgay.getCalendarButton().setBackground(new Color(102, 0, 153));
		chooserDenNgay.getCalendarButton().setToolTipText("Chọn ngày kết thúc");
		
		daoCTHD = new DAOCTHD();
		daoMatHang = new DAOMatHang();
		daoHoaDon = new DAOHoaDon();
		daoPhong = new DAOPhong();
		
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1202, 422));

        jPanel1.setPreferredSize(new java.awt.Dimension(1202, 422));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel1.setText("Đến ngày:");

        jbThongKe.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jbThongKe.setText("Thống kê");

        jbLamMoiTK.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jbLamMoiTK.setText("Làm mới");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel2.setText("Từ ngày:");

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        jPanelTDT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 255)));

        iconTDT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconTDT.setIcon(new ImageIcon("D:\\HK1_2022_2023\\PTUD\\baiTapLonCKPTUD_ver6\\baiTapLonCKPTUD\\baiTapLonCKPTUD\\iCon\\analytics.png"));
        //D:\HK1_2022_2023\PTUD\baiTapLonCKPTUD_ver6\baiTapLonCKPTUD\baiTapLonCKPTUD\iCon
        //D:\\PhatTrienUngDung\\baiTapLonCKPTUD\\baiTapLonCKPTUD\\iCon\\analytics.png
        iconTDT.setBounds(0, 0, 75, 60);
		Image imgBackGround = Toolkit.getDefaultToolkit().getImage("D:\\HK1_2022_2023\\PTUD\\baiTapLonCKPTUD_ver6\\baiTapLonCKPTUD\\baiTapLonCKPTUD\\iCon\\analytics.png");
		Image resizeBG = imgBackGround.getScaledInstance(iconTDT.getWidth(), iconTDT.getHeight(), 0);
		iconTDT.setIcon(new ImageIcon(resizeBG));

//        jLabelTDT.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
//        jLabelTDT.setForeground(new java.awt.Color(153, 0, 204));
//        jLabelTDT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
//        jLabelTDT.setText("TỔNG DOANH THU");
		btnTongDoanhThu.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		btnTongDoanhThu.setFont(new Font("SansSerif", Font.BOLD, 20));
		btnTongDoanhThu.setBackground(new Color(114, 23, 153));
		btnTongDoanhThu.setText("TỔNG DOANH THU");
		btnTongDoanhThu.setForeground(Color.BLACK);
		btnTongDoanhThu.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		btnTongDoanhThu.setBounds(107, 109, 226, 52);

        jTextField3.setBackground(new java.awt.Color(242,242,242));
        jTextField3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.setText("0 VNĐ");
        jTextField3.setBorder(null);
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        
		jbThongKe.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		jbThongKe.setForeground(Color.WHITE);
		jbThongKe.setFont(new Font("SansSerif", Font.BOLD, 20));
		jbThongKe.setBackground(new Color(114, 23, 153));

		javax.swing.GroupLayout jPanelTDTLayout = new javax.swing.GroupLayout(jPanelTDT);
        jPanelTDT.setLayout(jPanelTDTLayout);
        jPanelTDTLayout.setHorizontalGroup(
            jPanelTDTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTDTLayout.createSequentialGroup()
                .addGap(0, 159, Short.MAX_VALUE)
                .addGroup(jPanelTDTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTDTLayout.createSequentialGroup()
                        .addGroup(jPanelTDTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnTongDoanhThu)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(140, 140, 140))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTDTLayout.createSequentialGroup()
                        .addComponent(iconTDT, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(179, 179, 179))))
        );
        jPanelTDTLayout.setVerticalGroup(
            jPanelTDTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTDTLayout.createSequentialGroup()
                .addComponent(iconTDT, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTongDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        
        jPanelThoiGian.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 255)));

        //iconTG.setText("iconThoiGian");

        iconTG.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconTG.setIcon(new ImageIcon("D:\\HK1_2022_2023\\PTUD\\baiTapLonCKPTUD_ver6\\baiTapLonCKPTUD\\baiTapLonCKPTUD\\iCon\\analytics.png"));
        //D:\HK1_2022_2023\PTUD\baiTapLonCKPTUD_ver6\baiTapLonCKPTUD\baiTapLonCKPTUD\iCon
        //D:\\PhatTrienUngDung\\baiTapLonCKPTUD\\baiTapLonCKPTUD\\iCon\\analytics.png
        iconTG.setBounds(0, 0, 78, 60);
		Image imgBackGround1 = Toolkit.getDefaultToolkit().getImage("D:\\HK1_2022_2023\\PTUD\\baiTapLonCKPTUD_ver6\\baiTapLonCKPTUD\\baiTapLonCKPTUD\\iCon\\analytics.png");
		Image resizeBG1 = imgBackGround.getScaledInstance(iconTG.getWidth(), iconTG.getHeight(), 0);
		iconTG.setIcon(new ImageIcon(resizeBG1));
		
		
//        jLabelTG.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
//        jLabelTG.setForeground(new java.awt.Color(153, 0, 204));
//        jLabelTG.setText("THỜI GIAN HOẠT ĐỘNG PHÒNG");
		btnTGHD.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		btnTGHD.setFont(new Font("SansSerif", Font.BOLD, 20));
		btnTGHD.setForeground(Color.BLACK);
		btnTGHD.setBackground(new Color(114, 23, 153));
		btnTGHD.setText("TỔNG THỜI GIAN");
		btnTGHD.setBounds(109, 109, 237, 51);

        jTextField4.setBackground(new java.awt.Color(242,242,242));
        jTextField4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField4.setText("0 HOURS");
        jTextField4.setBorder(null);

		// Bieu do
		pBieuDo = new JPanel();
		pBieuDo.setBackground(new Color(238,239,243,90));
		pBieuDo.setBorder(new TitledBorder(new LineBorder(new Color(114, 23 ,153), 1, true), "", TitledBorder.LEFT, TitledBorder.TOP, null, Color.BLACK));
		pBieuDo.setBounds(10, 27, 1160, 180);
		pBieuDo.setBackground(Color.WHITE);
		jTextArea3.add(pBieuDo);
		pBieuDo.setLayout(null);
		
        javax.swing.GroupLayout jPanelThoiGianLayout = new javax.swing.GroupLayout(jPanelThoiGian);
        jPanelThoiGian.setLayout(jPanelThoiGianLayout);
        jPanelThoiGianLayout.setHorizontalGroup(
            jPanelThoiGianLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelThoiGianLayout.createSequentialGroup()
                .addContainerGap(137, Short.MAX_VALUE)
                .addGroup(jPanelThoiGianLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelThoiGianLayout.createSequentialGroup()
                        .addComponent(btnTGHD)
                        .addGap(87, 87, 87))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelThoiGianLayout.createSequentialGroup()
                        .addComponent(iconTG, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(196, 196, 196))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelThoiGianLayout.createSequentialGroup()
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(171, 171, 171))))
        );
        jPanelThoiGianLayout.setVerticalGroup(
            jPanelThoiGianLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelThoiGianLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(iconTG, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTGHD, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(chooserTuNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                                .addComponent(chooserDenNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbThongKe, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbLamMoiTK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addComponent(jPanelTDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(351, 351, 351))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelTDT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chooserTuNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chooserDenNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbThongKe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbLamMoiTK)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanelThoiGian, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        
        //Action listener
        jbThongKe.addActionListener(this);
        jbLamMoiTK.addActionListener(this);
        btnTongDoanhThu.addActionListener(this);
        btnTGHD.addActionListener(this);
        
        dfM = new DecimalFormat("###,### VNĐ");
		dfH = new DecimalFormat("### h");
		sf = new SimpleDateFormat("dd/MM/yyy");
    }// </editor-fold>//GEN-END:initComponents

	//số tiền thuê
	public double tinhTienThue(double giaPhong, HoaDon hd) {
		@SuppressWarnings("deprecation")
		int gioVao = hd.getGioVao().getHours(),
				phutVao = hd.getGioVao().getMinutes();
		@SuppressWarnings("deprecation")
		int gioRa = hd.getGioRa().getHours(),
				phutRa = hd.getGioRa().getMinutes();

		int tongThoiGian = (gioRa*60 + phutRa) - (gioVao*60 + phutVao);
		double tongTienThuePhong = 0;
		if(tongThoiGian > 0) {
			if(tongThoiGian <= 60) {
				tongTienThuePhong = giaPhong;
				return tongTienThuePhong;
			}
			else {
				tongTienThuePhong = (tongThoiGian * giaPhong)/60;
				return tongTienThuePhong;
			}
		}

		return -1;
	}
	//tong tien 1 hoa don
	public double tongTienCTHD(double tongTienThue,HoaDon hd) {
		double tong = tongTienThue;

		ArrayList<ChiTietHD> lsCTHD = daoCTHD.getCTHDTheoMaHD(hd.getMaHoaDon());
		for(ChiTietHD ct : lsCTHD) {
			MatHang mh = daoMatHang.getMHTheoMaMH(ct.getMatHang().getMaMatHang());
			tong += mh.getGiaMatHang() * ct.getSoLuong();
		}

		return tong;
	}
	public double tongDoanhThu(ArrayList<HoaDon> lstHD) {
		double doanhThu = 0;
		for(HoaDon hd : lstHD) {
			String phuThu = hd.getPhuThu();
			Phong p = daoPhong.getPhongTheoMa(hd.getPhong().getMaPhong());
			double giaPhong =p.getGiaPhong();
			double giaPhuThu = 0;
			if(phuThu.equalsIgnoreCase("Buổi tối")) {
				giaPhuThu = 10000;
			}
			if(phuThu.equalsIgnoreCase("Ngày lễ")) {
				giaPhuThu = 30000;
			}
			if(phuThu.equalsIgnoreCase("Cuối tuần")) {
				giaPhuThu = 20000;
			}
			giaPhong = giaPhuThu + giaPhong;
			double tongTienThue = tinhTienThue(giaPhong, hd);

			@SuppressWarnings("unused")
			int tongGioThue = (int) ((tongTienThue)/giaPhong);
			@SuppressWarnings("unused")
			int tongPhutThue = (int) (((tongTienThue*60)/giaPhong) % 60);



			double thanhTien = tongTienCTHD(tongTienThue, hd);


			thanhTien = thanhTien - hd.getGiamGia();
			doanhThu+= thanhTien;
		}
		return doanhThu;
	}	
	//load thong ke doanh thu
	public void loadThongKeDoanhThu() {
		
		java.util.Date utilngayBD = chooserTuNgay.getDate();
		java.util.Date utilngayKT = chooserDenNgay.getDate();
		
		@SuppressWarnings("deprecation")
		Date ngayBatDau = new Date(utilngayBD.getYear(), utilngayBD.getMonth(), utilngayBD.getDate());
		@SuppressWarnings("deprecation")
		Date ngayKetThuc = new Date(utilngayKT.getYear(), utilngayKT.getMonth(), utilngayKT.getDate());
		if(ngayBatDau.before(ngayKetThuc)||ngayBatDau.equals(ngayKetThuc)) {
			
			ArrayList<HoaDon> lstHD = daoHoaDon.getHDTheoNgay(ngayBatDau, ngayKetThuc);
			double doanhThu = tongDoanhThu(lstHD);
			jTextField3.setText(dfM.format(doanhThu));
			
		}
		else JOptionPane.showMessageDialog(this, "Ngày bắt đầu phải nhỏ hơn hoặc bằng ngày kết thúc!");
	}
	
	//load thống kê số giờ đã sử dụng cho các phòng
	@SuppressWarnings("deprecation")
	public void loadThongKeSoGio() {
		java.util.Date utilngayBD = chooserTuNgay.getDate();
		java.util.Date utilngayKT = chooserDenNgay.getDate();
		

		Date ngayBatDau = new Date(utilngayBD.getYear(), utilngayBD.getMonth(), utilngayBD.getDate());
		Date ngayKetThuc = new Date(utilngayKT.getYear(), utilngayKT.getMonth(), utilngayKT.getDate());
		ArrayList<HoaDon> lstHD = daoHoaDon.getHDTheoNgay(ngayBatDau, ngayKetThuc);
		if(ngayBatDau.before(ngayKetThuc)||ngayBatDau.equals(ngayKetThuc)) {
			int thoiGianThongKe = 0;
			for(HoaDon hd: lstHD) {
				int gioVao = hd.getGioVao().getHours(),
						phutVao = hd.getGioVao().getMinutes();
				int gioRa = hd.getGioRa().getHours(),
						phutRa = hd.getGioRa().getMinutes();

				int tongThoiGian = (gioRa*60 + phutRa) - (gioVao*60 + phutVao);
				thoiGianThongKe += tongThoiGian;
			}
			jTextField4.setText(dfH.format(thoiGianThongKe)+"");
		}
	}
	
	public void resetAll() {
		chooserTuNgay.setDate(dNow);
		chooserDenNgay.setDate(dNow);
		jTextField3.setText("0 VNĐ");
		jTextField4.setText("0 HOUR");
		pBieuDo.removeAll();
		pBieuDo.revalidate();
		pBieuDo.repaint();
	}
	public void addChart() throws RemoteException {
		if(!btnTongDoanhThu.getText().equalsIgnoreCase("")) {
			pBieuDo.removeAll();
			pBieuDo.revalidate();
			pBieuDo.repaint();
			ChartPanel chartPanel = new ChartPanel(createChart());
			chartPanel.setLocation(10,11);
			chartPanel.setSize(1160, 180);
	        chartPanel.setPreferredSize(new java.awt.Dimension(560, 367));
	        pBieuDo.add(chartPanel);
	 	}else JOptionPane.showMessageDialog(this, "Vui lòng thống kê trước khi xem biểu đồ");
	}
	
	private JFreeChart createChart() throws RemoteException {
        JFreeChart barChart = ChartFactory.createBarChart(
                "Biểu đồ thống kê doanh thu",
                "Ngày", "Tổng tiền",
                createDataset(), PlotOrientation.VERTICAL, false, false, false);
        CategoryPlot plot = barChart.getCategoryPlot();
        
        CategoryAxis domainAxis = plot.getDomainAxis();
		
		  domainAxis.setCategoryLabelPositions(
				  CategoryLabelPositions.UP_45);
		//  CategoryLabelPositions.createUpRotationLabelPositions(Math.PI / 2.0) );
        return barChart;
	}
	
	 @SuppressWarnings({ "unused", "deprecation" })
	public CategoryDataset createDataset() throws RemoteException {
		 final DefaultCategoryDataset dataset = new DefaultCategoryDataset();
		 
			java.util.Date utilngayBD = chooserTuNgay.getDate();
			java.util.Date utilngayKT = chooserDenNgay.getDate();

			Date ngayden = new Date(utilngayBD.getYear(), utilngayBD.getMonth(), utilngayBD.getDate());
			Date ngayKT = new Date(utilngayKT.getYear(), utilngayKT.getMonth(), utilngayKT.getDate());
			long noDay = (ngayKT.getTime() - ngayden.getTime()) / (24 * 3600 * 1000);
			for(int i = 0;i<=noDay;i++) {
				ArrayList<HoaDon> ls = daoHoaDon.getHDtheoNgay(ngayden);
				double tongtien =0;
				for(HoaDon hd : ls) {
					if(hd != null) {
						String phuThu = hd.getPhuThu();
						Phong p = daoPhong.getPhongTheoMa(hd.getPhong().getMaPhong());
						double giaPhong =p.getGiaPhong();
						double giaPhuThu = 0;
						if(phuThu.equalsIgnoreCase("Buổi tối")) {
							giaPhuThu = 10000;
						}
						if(phuThu.equalsIgnoreCase("Ngày lễ")) {
							giaPhuThu = 30000;
						}
						if(phuThu.equalsIgnoreCase("Cuối tuần")) {
							giaPhuThu = 20000;
						}
						giaPhong = giaPhuThu + giaPhong;
						double tongTienThue = tinhTienThue(giaPhong, hd);

						int tongGioThue = (int) ((tongTienThue)/giaPhong);
						int tongPhutThue = (int) (((tongTienThue*60)/giaPhong) % 60);

						

						double thanhTien = tongTienCTHD(tongTienThue, hd);


						thanhTien = thanhTien - hd.getGiamGia();
						tongtien+= thanhTien;
					}	
				}
				
				dataset.addValue(tongtien, "Số tiền (VNĐ)", sf.format(ngayden));
				Date ngayMoi = new Date(ngayden.getYear(), ngayden.getMonth(), ngayden.getDate()+1);
				ngayden= ngayMoi;
			}	

	        return dataset;
	}
	
	 public void addChartGio() throws RemoteException {
			if(!btnTGHD.getText().equalsIgnoreCase("")) {
				pBieuDo.removeAll();
				pBieuDo.revalidate();
				pBieuDo.repaint();
				ChartPanel chartPanel = new ChartPanel(createChartGio());
				chartPanel.setLocation(10, 11);
				chartPanel.setSize(1160, 180);
		        chartPanel.setPreferredSize(new java.awt.Dimension(560, 367));
		        pBieuDo.add(chartPanel);
		 	}else JOptionPane.showMessageDialog(this, "Vui lòng thống kê trước khi xem biểu đồ");
		}
		
		private JFreeChart createChartGio() throws RemoteException {
			  JFreeChart chart = ChartFactory.createPieChart(
		                "Biểu đồ thống kê giờ hoạt động mỗi phòng",  createDatasetGio(), true, true, true);

	        return chart;
		}
		 
		 @SuppressWarnings("deprecation")
		public PieDataset  createDatasetGio() throws RemoteException {
			 final DefaultPieDataset  dataset = new DefaultPieDataset ();
			
				java.util.Date utilngayBD = chooserTuNgay.getDate();
				java.util.Date utilngayKT = chooserDenNgay.getDate();

				Date ngayden = new Date(utilngayBD.getYear(), utilngayBD.getMonth(), utilngayBD.getDate());
				Date ngayKT = new Date(utilngayKT.getYear(), utilngayKT.getMonth(), utilngayKT.getDate());
				long noDay = (ngayKT.getTime() - ngayden.getTime()) / (24 * 3600 * 1000);
				for(int i = 0;i<=noDay;i++) {
					ArrayList<HoaDon> ls = daoHoaDon.getHDtheoNgay(ngayden);
					int count =0;
					String tenP = "";
					for(HoaDon hd :ls) {
						if(hd!=null) {
							 tenP = hd.getPhong().getMaPhong().toString();
							//Phong p = daoPhong.getPhongTheoMa(hd.getPhong().getMaPhong());
							int gioVao = hd.getGioVao().getHours(),
									phutVao = hd.getGioVao().getMinutes();
							int gioRa = hd.getGioRa().getHours(),
									phutRa = hd.getGioRa().getMinutes();

							int tongThoiGian = (gioRa*60 + phutRa) - (gioVao*60 + phutVao);
							count += tongThoiGian;
						}
						}	
					dataset.setValue(tenP, count);
					Date ngayMoi = new Date(ngayden.getYear(), ngayden.getMonth(), ngayden.getDate()+1);
					ngayden= ngayMoi;
				}	

		        return dataset;
		}
	
    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(FRMQuanLiThongKe.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(FRMQuanLiThongKe.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(FRMQuanLiThongKe.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(FRMQuanLiThongKe.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new FRMQuanLiThongKe().setVisible(true);
			}
		});
	}
	

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel iconTDT;
    private javax.swing.JLabel iconTG;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelTDT;
    private javax.swing.JLabel jLabelTG;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelTDT;
    private javax.swing.JPanel jPanelThoiGian;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JButton jbLamMoiTK;
    private javax.swing.JButton jbThongKe;
    private javax.swing.JButton btnTongDoanhThu;
    private javax.swing.JButton btnTGHD;
    private JDateChooser chooserTuNgay;
    private JDateChooser chooserDenNgay;
    private Date dNgayHienTai;
	private DecimalFormat dfM;
	private DecimalFormat dfH;
	private SimpleDateFormat sf;
	private DAOCTHD daoCTHD;
	private DAOMatHang daoMatHang;
	private DAOHoaDon daoHoaDon;
	private DAOPhong daoPhong;
	private LocalDate now;
	private int ngay;
	private int thang;
	private int nam;
	private Date dNow;
	private JPanel pBieuDo;
    // End of variables declaration//GEN-END:variables
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		Object o = e.getSource();
		if(o.equals(jbThongKe))
		{
			java.util.Date utilngayBD = chooserTuNgay.getDate();
			java.util.Date utilngayKT = chooserDenNgay.getDate();
			@SuppressWarnings("deprecation")
			Date ngayden = new Date(utilngayBD.getYear(), utilngayBD.getMonth(), utilngayBD.getDate());
			@SuppressWarnings("deprecation")
			Date ngayKT = new Date(utilngayKT.getYear(), utilngayKT.getMonth(), utilngayKT.getDate());
			
			long noDay = (ngayKT.getTime() - ngayden.getTime()) / (24 * 3600 * 1000);
				if(noDay < 32) {
					loadThongKeDoanhThu();
					loadThongKeSoGio();
				}
				else
			JOptionPane.showMessageDialog(null, "Chỉ được chọn trong khoảng thời gian 1 tháng");

		}
		if(o.equals(btnTongDoanhThu))
		{
			try {
				addChart();
			} catch (RemoteException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}

		}
		if(o.equals(btnTGHD)) {
			try {
				addChartGio();
			} catch (RemoteException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}


		}
		if(o.equals(jbLamMoiTK))
			resetAll();
	}
}
